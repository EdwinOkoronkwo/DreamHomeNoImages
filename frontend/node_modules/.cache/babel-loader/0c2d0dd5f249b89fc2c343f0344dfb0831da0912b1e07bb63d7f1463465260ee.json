{"ast":null,"code":"var _jsxFileName = \"C:\\\\CentennialCollege\\\\COMP214\\\\DreamHomeNoImages\\\\frontend\\\\src\\\\components\\\\branches\\\\BranchForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Form, json, redirect, useNavigate } from \"react-router-dom\";\nimport classes from \"./BranchForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BranchForm({\n  method,\n  branch\n}) {\n  _s();\n  const navigate = useNavigate();\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n\n    // Prepare data for submission\n    const branchData = {\n      branchno: formData.get(\"branchno\"),\n      street: formData.get(\"street\"),\n      city: formData.get(\"city\"),\n      postcode: formData.get(\"postcode\")\n    };\n    let url = \"http://localhost:8000/api/branches\";\n    if (method === \"PATCH\") {\n      url += `/${branchData.branchno}`;\n    }\n    try {\n      const response = await fetch(url, {\n        method: method,\n        body: formData\n      });\n      if (response.status === 422) {\n        const data = await response.json();\n        // Handle validation errors\n        console.error(data.errors);\n        return;\n      }\n      if (!response.ok) {\n        throw new Error(\"Could not save branch\");\n      }\n      navigate(\"/branches\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"branchno\",\n        children: \"Branch Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"branchno\",\n        type: \"text\",\n        name: \"branchno\",\n        required: true,\n        defaultValue: branch && branch.branchno\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"street\",\n        type: \"text\",\n        name: \"street\",\n        required: true,\n        defaultValue: branch && branch.street\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"city\",\n        type: \"text\",\n        name: \"city\",\n        required: true,\n        defaultValue: branch && branch.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postcode\",\n        children: \"Postcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"postcode\",\n        type: \"text\",\n        name: \"postcode\",\n        required: true,\n        defaultValue: branch && branch.postcode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => navigate(\"..\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(BranchForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = BranchForm;\nexport default BranchForm;\nexport async function action({\n  request,\n  params\n}) {\n  const method = request.method;\n  const formData = await request.formData();\n  let url = \"http://localhost:8000/api/branches\";\n  if (method === \"PATCH\") {\n    url += `/${params.branchno}`;\n  }\n  try {\n    const response = await fetch(url, {\n      method: method,\n      body: formData\n    });\n    if (response.status === 422) {\n      return response; // Return response to handle validation errors\n    }\n    if (!response.ok) {\n      throw new Error(\"Could not save branch\");\n    }\n    return redirect(\"/branches\");\n  } catch (error) {\n    console.error(error.message);\n    throw json({\n      message: \"Could not save branch\"\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"BranchForm\");","map":{"version":3,"names":["React","Form","json","redirect","useNavigate","classes","jsxDEV","_jsxDEV","BranchForm","method","branch","_s","navigate","handleSubmit","event","preventDefault","formData","FormData","target","branchData","branchno","get","street","city","postcode","url","response","fetch","body","status","data","console","error","errors","ok","Error","message","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","required","defaultValue","actions","onClick","_c","action","request","params","$RefreshReg$"],"sources":["C:/CentennialCollege/COMP214/DreamHomeNoImages/frontend/src/components/branches/BranchForm.js"],"sourcesContent":["import React from \"react\";\nimport { Form, json, redirect, useNavigate } from \"react-router-dom\";\nimport classes from \"./BranchForm.module.css\";\n\nfunction BranchForm({ method, branch }) {\n  const navigate = useNavigate();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n\n    // Prepare data for submission\n    const branchData = {\n      branchno: formData.get(\"branchno\"),\n      street: formData.get(\"street\"),\n      city: formData.get(\"city\"),\n      postcode: formData.get(\"postcode\"),\n    };\n\n    let url = \"http://localhost:8000/api/branches\";\n    if (method === \"PATCH\") {\n      url += `/${branchData.branchno}`;\n    }\n\n    try {\n      const response = await fetch(url, {\n        method: method,\n        body: formData,\n      });\n\n      if (response.status === 422) {\n        const data = await response.json();\n        // Handle validation errors\n        console.error(data.errors);\n        return;\n      }\n\n      if (!response.ok) {\n        throw new Error(\"Could not save branch\");\n      }\n\n      navigate(\"/branches\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  return (\n    <Form method={method} className={classes.form} onSubmit={handleSubmit}>\n      <p>\n        <label htmlFor=\"branchno\">Branch Number</label>\n        <input\n          id=\"branchno\"\n          type=\"text\"\n          name=\"branchno\"\n          required\n          defaultValue={branch && branch.branchno}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"street\">Street</label>\n        <input\n          id=\"street\"\n          type=\"text\"\n          name=\"street\"\n          required\n          defaultValue={branch && branch.street}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"city\">City</label>\n        <input\n          id=\"city\"\n          type=\"text\"\n          name=\"city\"\n          required\n          defaultValue={branch && branch.city}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"postcode\">Postcode</label>\n        <input\n          id=\"postcode\"\n          type=\"text\"\n          name=\"postcode\"\n          required\n          defaultValue={branch && branch.postcode}\n        />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={() => navigate(\"..\")}>\n          Cancel\n        </button>\n        <button type=\"submit\">Save</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default BranchForm;\n\nexport async function action({ request, params }) {\n  const method = request.method;\n  const formData = await request.formData();\n\n  let url = \"http://localhost:8000/api/branches\";\n  if (method === \"PATCH\") {\n    url += `/${params.branchno}`;\n  }\n\n  try {\n    const response = await fetch(url, {\n      method: method,\n      body: formData,\n    });\n\n    if (response.status === 422) {\n      return response; // Return response to handle validation errors\n    }\n\n    if (!response.ok) {\n      throw new Error(\"Could not save branch\");\n    }\n\n    return redirect(\"/branches\");\n  } catch (error) {\n    console.error(error.message);\n    throw json({ message: \"Could not save branch\" }, { status: 500 });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}