{"ast":null,"code":"var _jsxFileName = \"C:\\\\CentennialCollege\\\\COMP214\\\\DreamHomeNoImages\\\\frontend\\\\src\\\\components\\\\branches\\\\BranchForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BranchForm({\n  branch = {},\n  method\n}) {\n  _s();\n  const [branchData, setBranchData] = useState(branch);\n  useEffect(() => {\n    setBranchData(branch);\n  }, [branch]);\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      const url = `http://localhost:8000/api/branches/${branchData.branchno}`;\n      const response = await fetch(url, {\n        method: method || \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(branchData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Handle successful submission, like navigating to the updated branch\n        window.location.href = `/branches/${data.branch.branchno}`;\n      } else {\n        alert(data.message || \"Failed to process branch.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting branch:\", error);\n      alert(\"An error occurred while processing the branch.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Branch No:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: branchData.branchno || \"\",\n        readOnly: method === \"PATCH\",\n        onChange: e => setBranchData({\n          ...branchData,\n          branchno: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Street:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: branchData.street || \"\",\n        onChange: e => setBranchData({\n          ...branchData,\n          street: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: branchData.city || \"\",\n        onChange: e => setBranchData({\n          ...branchData,\n          city: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Postcode:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: branchData.postcode || \"\",\n        onChange: e => setBranchData({\n          ...branchData,\n          postcode: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: method === \"PATCH\" ? \"Update Branch\" : \"Create Branch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(BranchForm, \"NqPOziX8HheH00xOn5gnNoUDY6Q=\");\n_c = BranchForm;\nexport default BranchForm;\nexport async function action({\n  request,\n  params\n}) {\n  const method = request.method;\n  const formData = await request.formData();\n\n  // Extract branch data from formData\n  const branchData = {};\n  formData.forEach((value, key) => {\n    branchData[key] = value;\n  });\n  let url = \"http://localhost:8000/api/branches\";\n  if (method === \"PATCH\" && params.branchno) {\n    url += `/${params.branchno}`;\n  }\n  try {\n    const response = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\" // Ensure headers are set correctly for JSON\n      },\n      body: JSON.stringify(branchData) // Send data as JSON\n    });\n    if (response.status === 422) {\n      return response; // Return response to handle validation errors\n    }\n    if (!response.ok) {\n      throw new Error(\"Could not save branch\");\n    }\n    return redirect(\"/branches\");\n  } catch (error) {\n    console.error(error.message);\n    throw json({\n      message: \"Could not save branch\"\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"BranchForm\");","map":{"version":3,"names":["React","useState","useEffect","json","redirect","jsxDEV","_jsxDEV","BranchForm","branch","method","_s","branchData","setBranchData","handleSubmit","event","preventDefault","url","branchno","response","fetch","headers","body","JSON","stringify","data","ok","window","location","href","alert","message","error","console","onSubmit","children","type","value","readOnly","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","street","city","postcode","_c","action","request","params","formData","forEach","key","status","Error","$RefreshReg$"],"sources":["C:/CentennialCollege/COMP214/DreamHomeNoImages/frontend/src/components/branches/BranchForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { json, redirect } from \"react-router-dom\";\n\nfunction BranchForm({ branch = {}, method }) {\n  const [branchData, setBranchData] = useState(branch);\n\n  useEffect(() => {\n    setBranchData(branch);\n  }, [branch]);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const url = `http://localhost:8000/api/branches/${branchData.branchno}`;\n      const response = await fetch(url, {\n        method: method || \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(branchData),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        // Handle successful submission, like navigating to the updated branch\n        window.location.href = `/branches/${data.branch.branchno}`;\n      } else {\n        alert(data.message || \"Failed to process branch.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting branch:\", error);\n      alert(\"An error occurred while processing the branch.\");\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Branch No:\n        <input\n          type=\"text\"\n          value={branchData.branchno || \"\"}\n          readOnly={method === \"PATCH\"}\n          onChange={(e) =>\n            setBranchData({ ...branchData, branchno: e.target.value })\n          }\n        />\n      </label>\n      <label>\n        Street:\n        <input\n          type=\"text\"\n          value={branchData.street || \"\"}\n          onChange={(e) =>\n            setBranchData({ ...branchData, street: e.target.value })\n          }\n        />\n      </label>\n      <label>\n        City:\n        <input\n          type=\"text\"\n          value={branchData.city || \"\"}\n          onChange={(e) =>\n            setBranchData({ ...branchData, city: e.target.value })\n          }\n        />\n      </label>\n      <label>\n        Postcode:\n        <input\n          type=\"text\"\n          value={branchData.postcode || \"\"}\n          onChange={(e) =>\n            setBranchData({ ...branchData, postcode: e.target.value })\n          }\n        />\n      </label>\n      {/* Add other fields as needed */}\n      <button type=\"submit\">\n        {method === \"PATCH\" ? \"Update Branch\" : \"Create Branch\"}\n      </button>\n    </form>\n  );\n}\n\nexport default BranchForm;\n\nexport async function action({ request, params }) {\n  const method = request.method;\n  const formData = await request.formData();\n\n  // Extract branch data from formData\n  const branchData = {};\n  formData.forEach((value, key) => {\n    branchData[key] = value;\n  });\n\n  let url = \"http://localhost:8000/api/branches\";\n  if (method === \"PATCH\" && params.branchno) {\n    url += `/${params.branchno}`;\n  }\n\n  try {\n    const response = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\", // Ensure headers are set correctly for JSON\n      },\n      body: JSON.stringify(branchData), // Send data as JSON\n    });\n\n    if (response.status === 422) {\n      return response; // Return response to handle validation errors\n    }\n\n    if (!response.ok) {\n      throw new Error(\"Could not save branch\");\n    }\n\n    return redirect(\"/branches\");\n  } catch (error) {\n    console.error(error.message);\n    throw json({ message: \"Could not save branch\" }, { status: 500 });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}