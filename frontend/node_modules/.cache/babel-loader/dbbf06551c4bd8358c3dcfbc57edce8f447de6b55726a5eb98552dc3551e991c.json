{"ast":null,"code":"var _jsxFileName = \"C:\\\\CentennialCollege\\\\COMP214\\\\Group Project\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams, json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetail() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetail, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action({\n  params\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId);\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","useParams","json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetail","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","action","$RefreshReg$"],"sources":["C:/CentennialCollege/COMP214/Group Project/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams, json, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetail() {\r\n  const data = useRouteLoaderData(\"event-detail\");\r\n  return <EventItem event={data.event} />;\r\n}\r\n\r\nexport default EventDetail;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected event.\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n\r\nexport async function action({ params }) {\r\n  const eventId = params.eventId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId);\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AACtE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBAAOG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACN,EAAA,CAHQD,WAAW;EAAA,QACLJ,kBAAkB;AAAA;AAAAY,EAAA,GADxBR,WAAW;AAKpB,eAAeA,WAAW;AAE1B,OAAO,eAAeS,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMrB,IAAI,CACR;MAAEsB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,eAAeK,MAAMA,CAAC;EAAER;AAAO,CAAC,EAAE;EACvC,MAAME,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,CAAC;AACzE;AAAC,IAAAL,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}